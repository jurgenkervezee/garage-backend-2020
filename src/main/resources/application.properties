# datasource postgres
server.port=8080
spring.jpa.database=postgresql
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/jurgenkervezee
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.datasource.initialization-mode=always
# onderstaande aanpassen anders verwijderd hij de tabellen tijdens het echte project --> update ipv create
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.show-sql=true

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB


# App Properties
jurgen.sec.jwtSecret= geheimeSleutel
jurgen.sec.jwtExpirationMs= 86400000

## datasource H2
#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5
#spring.datasource.url=jdbc:h2:mem:testdb
##spring.datasource.url=jdbc:h2:file:./data/testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2console/
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
## voor debuggen kan je volgende show sql zien in de console
#spring.jpa.show-sql=true